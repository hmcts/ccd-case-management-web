#!groovy

properties([
    // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
    pipelineTriggers([cron('H 05 * * *')]),
    parameters([
        string(name: 'TEST_URL_PARAM', defaultValue: '', description: 'Test URL'),
        string(name: 'AUTOTEST_EMAIL_PARAM', defaultValue: '', description: 'Auto Test Email'),
        string(name: 'AUTOTEST_PASSWORD_PARAM', defaultValue: '', description: 'Auto Test Password'),
        string(name: 'AUTOTEST_INSTRUMENTATIONKEY_PARAM', defaultValue: 'some-key', description: 'Auto Test Instrumentation key'),
        booleanParam(
            name: 'RUN_XBROWSER',
            defaultValue: false,
            description: 'Run Cross Browser tests'
        )
    ]),
])

@Library("Infrastructure")

def type = "angular"
def product = "ccd"
def app = "case-management-web"

def secrets = [
    'ccd-${env}': [
        secret('ccd-caseworker-autotest-fe-email', 'CCD_CASEWORKER_AUTOTEST_FE_EMAIL'),
        secret('ccd-caseworker-autotest-fe-password', 'CCD_CASEWORKER_AUTOTEST_FE_PASSWORD'),
        secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY'),
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withNightlyPipeline(type, product, app) {

    enableSlackNotifications('#ccd-nightly-builds')

    if (params.RUN_XBROWSER) {
        enableCrossBrowserTest()
    }

    loadVaultSecrets(secrets)
    env.TEST_URL = params.TEST_URL_PARAM
    env.CCD_CASEWORKER_AUTOTEST_FE_EMAIL = params.AUTOTEST_EMAIL_PARAM
    env.CCD_CASEWORKER_AUTOTEST_FE_PASSWORD = params.AUTOTEST_PASSWORD_PARAM
    env.APPINSIGHTS_INSTRUMENTATIONKEY = params.AUTOTEST_INSTRUMENTATIONKEY_PARAM
    
    enableFullFunctionalTest()

    after('checkout') {
        sh "yarn cache clean"
    }

}
